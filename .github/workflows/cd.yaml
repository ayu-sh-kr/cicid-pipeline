name: CD

on:
  workflow_run:
    workflows: [ "CI" ]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted
    env:
      REGION: ${{secrets.AWS_REGION}}
      ECR_REPOSITORY: ${{secrets.AWS_REPO}}
      IMAGE_TAG: ${{ secrets.AWS_IMAGE_TAG}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{secrets.AWS_REGION}}
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_ACCESS_KEY_SECRET}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

      - name: Printing Credentials For Check
        env:
          registry: ${{steps.login-ecr.outputs.registry}}
        run: echo $registry

      - name: Provide docker permissions
        run: sudo usermod -aG docker ${USER}

      - name: Docker Login and Image Pull
        run: |
          aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 647236272635.dkr.ecr.us-east-1.amazonaws.com
          sudo docker pull ${{steps.login-ecr.outputs.registry}}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Current Status Check
        run: sudo docker ps

      - name: Deploy Docker container
        run: |
          echo "Starting Container Build"
          echo "Stopping Current Container"
          sudo docker stop my-app || true
          echo "Removing Container"
          sudo docker rm my-app || true
          echo "Building New Container"
          sudo docker run -d --name my-app -p 8080:8080 647236272635.dkr.ecr.us-east-1.amazonaws.com/ayu-sh-kr/cicd-pipeline:latest

      - name: Image Cleaning
        run: |
          echo "Starting Image Pruning"
          sudo docker image prune -a -f